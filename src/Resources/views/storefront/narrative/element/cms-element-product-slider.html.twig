{#
@BoxalinoRealTimeUserExperienceIntegration/storefront/narrative/element/cms-element-product-slider.html.twig

the response content is accessed via : block
all JSON schema properties are returned in an array, so if a single value is expected, use block.property[0] to access it
#}
{% block element_product_slider %}
    <div class="cms-element-product-slider {% if block.displayMode[0] == "standard" and block.verticalAlign[0] != "" %} has-vertical-alignment{% endif %}">
        {% block element_product_slider_alignment %}
            {% if block.verticalAlign[0] != "" %}
                <div class="cms-element-alignment{% if block.verticalAlign[0] == "center" %} align-self-center{% elseif block.verticalAlign[0] == "flex-end" %} align-self-end{% else %} align-self-start{% endif %}">
            {% endif %}
            <div class="base-slider product-slider{% if block.border[0] == "true" %} has-border{% endif %}{% if block.navigation[0] == "true" %} has-nav{% endif %}"
                 data-product-slider="true"
                 data-product-slider-options='{
                        {% if block.elMinWidth[0] != "" %}"productboxMinWidth": "{{ block.elMinWidth[0] }}",{% endif %}
                        "slider": {
                            "gutter": 30,
                            "autoplayButtonOutput": false,
                            "nav": false,
                            "controls": {% if block.navigation[0] == "true" %}true{% else %}false{% endif %},
                            {% if not block.navigation[0] == "true" %}"mouseDrag": true,{% endif %}
                            "autoplay": {% if block.rotate[0] == "true" %}true{% else %}false{% endif %}
                        }
                     }'>

                {% block element_product_slider_title %}
                    {% if block.title %}
                        <div class="cms-element-title">
                            <p class="cms-element-title-paragraph">{{ block.title }}</p>
                        </div>
                    {% endif %}
                {% endblock %}

                {% block element_product_slider_inner %}
                    {% block element_product_slider_element %}
                        <div class="product-slider-container {{ block.getBxAttributes().getClass() }}"
                            {% for bxAttribute in block.getBxAttributes() %}
                                {{ bxAttribute.getName() }}="{{ bxAttribute.getValue() }}"
                            {% endfor %}
                            data-product-slider-container="true">
                            {% for bxblock in block.blocks %}
                                {% block element_product_slider_inner_item %}
                                    <div class="product-slider-item">
                                        {#
                                            when using default shopware product templates, the following properties are required:
                                            layout
                                            displayMode
                                            product
                                        #}
                                        {% if bxblock.product.id %}
                                            {% set narrativeContent = {
                                                'block' : bxblock,
                                                'layout': block.layout[0],
                                                'displayMode': block.displayMode[0],
                                                'product': block.model.getItem(bxblock.product.id),
                                                'listingColumns' : listingColumns
                                            } %}
                                            {% sw_include bxblock.template with narrativeContent %}
                                        {% else %}
                                            {#
                                                in case the content in the listing is not only product
                                                but some other type (custom)
                                            #}
                                            {% set narrativeContent = {'block' : bxblock } %}
                                            {% sw_include bxblock.template with narrativeContent %}
                                        {% endif %}
                                    </div>
                                {% endblock %}
                            {% endfor %}
                        </div>
                    {% endblock %}

                    {% block element_product_slider_controls %}
                        {% if block.navigation[0] == "true" %}
                            <div class="product-slider-controls-container">
                                <div class="base-slider-controls"
                                     data-product-slider-controls="true">
                                    {% block element_product_slider_controls_items %}
                                        <button class="base-slider-controls-prev product-slider-controls-prev{% if block.border[0] == "true" %} has-border{% endif %}">
                                            {% block element_product_slider_controls_items_prev_icon %}
                                                {% sw_icon 'arrow-head-left' %}
                                            {% endblock %}
                                        </button>
                                        <button class="base-slider-controls-next product-slider-controls-next{% if block.border[0] == "true" %} has-border{% endif %}">
                                            {% block element_product_slider_controls_items_next_icon %}
                                                {% sw_icon 'arrow-head-right' %}
                                            {% endblock %}
                                        </button>
                                    {% endblock %}
                                </div>
                            </div>
                        {% endif %}
                    {% endblock %}
                {% endblock %}
            </div>
            {% if block.verticalAlign[0] == "true" %}
                </div>
            {% endif %}
        {% endblock %}
    </div>
{% endblock %}
