<?xml version="1.0" ?>
<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:monolog="http://symfony.com/schema/dic/monolog"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd http://symfony.com/schema/dic/monolog http://symfony.com/schema/dic/monolog/monolog-1.0.xsd">

    <!-- OPTIONAL: setting custom logger for the plugin use -->
    <monolog:config>
        <monolog:channel>boxalino-integration</monolog:channel>
        <monolog:handler name="boxalino_integration_log"
                         type="stream"
                         path="%kernel.logs_dir%/boxalino-integration-%kernel.environment%.log"
                         level="debug">
            <monolog:channels>
                <monolog:channel>boxalino-integration</monolog:channel>
            </monolog:channels>
        </monolog:handler>
    </monolog:config>

    <imports>
        <import resource="services/api/decorator.xml"/>
        <import resource="services/api/autocomplete.xml"/>
        <import resource="services/api/search.xml"/>
        <import resource="services/api/crossselling.xml"/>
        <import resource="services/api/cms.xml"/>
        <import resource="services/api/dynamic.xml"/>
        <import resource="services/api/newsletter.xml"/>
        <import resource="services/di.xml"/>
    </imports>

    <services>
        <!-- Shopware6 - Sorting resource - has to be added in integration layer because of the dynamic mapping for the product listing sorting -->
        <service id="Boxalino\RealTimeUserExperienceApi\Framework\Content\Listing\ApiSortingModelInterface"
                 class="Boxalino\RealTimeUserExperience\Framework\Content\Listing\ApiSortingModel"
                 parent="boxalino.api.content.listing.sorting"
                 public="true">
            <call method="addSortingOptionCollection">
                <argument type="collection">
                    <argument type="collection" key="score">
                        <argument key="field">score</argument>
                        <argument key="direction">asc</argument>
                        <argument key="label">Recommended</argument>
                        <argument key="api-field">score</argument>
                        <argument key="reverse">false</argument>
                    </argument>
                    <argument type="collection" key="topseller">
                        <argument key="field">topseller</argument>
                        <argument key="direction">desc</argument>
                        <argument key="label">Topseller</argument>
                        <argument key="api-field">sales</argument>
                        <argument key="reverse">true</argument>
                    </argument>
                    <argument type="collection" key="price-asc">
                        <argument key="field">price</argument>
                        <argument key="direction">asc</argument>
                        <argument key="label">Price: low to high</argument>
                        <argument key="api-field">discountedPrice</argument>
                        <argument key="reverse">false</argument>
                    </argument>
                    <argument type="collection" key="price-desc">
                        <argument key="field">price</argument>
                        <argument key="direction">desc</argument>
                        <argument key="label">Price: high to low</argument>
                        <argument key="api-field">discountedPrice</argument>
                        <argument key="reverse">true</argument>
                    </argument>
                    <argument type="collection" key="name-asc">
                        <argument key="field">name</argument>
                        <argument key="direction">asc</argument>
                        <argument key="label">Name A-Z</argument>
                        <argument key="api-field">title</argument>
                        <argument key="reverse">false</argument>
                    </argument>
                    <argument type="collection" key="name-desc">
                        <argument key="field">name</argument>
                        <argument key="direction">desc</argument>
                        <argument key="label">Name Z-A</argument>
                        <argument key="api-field">title</argument>
                        <argument key="reverse">true</argument>
                    </argument>
                    <argument type="collection" key="new">
                        <argument key="field">created_at</argument> <!-- the Shopware6 field -->
                        <argument key="direction">desc</argument>
                        <argument key="label">New</argument>
                        <argument key="api-field">di_group_release_date</argument> <!-- the Boxalino field -->
                        <argument key="reverse">true</argument> <!-- true for DESC, false for ASC -->
                    </argument>
                </argument>
            </call>
        </service>

        <!-- Logger defined per Shopware6 pattern - clears out dynamically -->
        <service id="Boxalino\RealTimeUserExperienceIntegration\Service\Logger" class="Monolog\Logger">
            <factory service="Shopware\Core\Framework\Log\LoggerFactory" method="createRotating"/>
            <argument type="string">boxalino-integration</argument>
        </service>

        <!-- GDPR cookie observer -->
        <service id="Boxalino\RealTimeUserExperience\Framework\Cookie\RtuxCookieProvider"
                 decorates="Shopware\Storefront\Framework\Cookie\CookieProviderInterface">
            <argument type="service" id="Boxalino\RealTimeUserExperience\Framework\Cookie\RtuxCookieProvider.inner" />
        </service>

    </services>

</container>
